{"version":3,"file":"static/js/65.6869d312.chunk.js","mappings":"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","sources":["components/ContactsPage/FormError/FormError.styled.jsx","components/ContactsPage/FormError/FormError.jsx","redux/filter/filterSelectors.js","components/ContactsPage/Contacts.styled.jsx","components/ContactsPage/ContactForm/ContactForm.styled.jsx","components/ContactsPage/ContactForm/ContactForm.jsx","components/ContactsPage/Filter/Filter.styled.jsx","components/ContactsPage/Filter/Filter.jsx","components/ContactsPage/ContactList/ContactList.styled.jsx","components/ContactsPage/Contact/Contact.styled.jsx","components/ContactsPage/Contact/Contact.jsx","components/ContactsPage/ContactList/ContactLIst.jsx","components/ContactsPage/Contacts.jsx","utils/getFilteredContacts.js","pages/ContactsPage.jsx","utils/toastOptions.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorElem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  position: absolute;\n  top: 0px;\n  left: -220px;\n\n  font-size: 15px;\n\n  width: 200px;\n  padding: 10px;\n\n  border-radius: 10px;\n  color: #ffff;\n  background-color: rgb(252, 44, 44);\n`;\n","import { ErrorMessage } from 'formik';\nimport { ErrorElem } from './FormError.styled';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={msg => {\n        return <ErrorElem>{msg}</ErrorElem>;\n      }}\n    />\n  );\n};\n","export const selectFilter = ({ filter }) => filter;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n\n  padding-top: 40px;\n  padding-bottom: 30px;\n`;\n\nexport const Phonebook = styled.div`\n  width: 600px;\n\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n\n  padding: 20px 0;\n  margin-right: 50px;\n\n  background-image: linear-gradient(\n    to right,\n    rgb(227, 237, 250) 15%,\n    rgb(201, 227, 254) 40%,\n    rgb(188, 219, 252) 65%,\n    rgb(175, 212, 252)\n  );\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px 0px;\n`;\n\nexport const Header = styled.h1`\n  font-size: 40px;\n  font-weight: 700;\n  text-align: center;\n\n  color: rgb(16, 16, 144);\n\n  margin-top: 0;\n  margin-bottom: 20px;\n`;\n\nexport const Title = Header.withComponent('h2');\n\nexport const Subtitle = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n\n  color: rgb(16, 16, 144);\n\n  padding: 10px 0;\n  margin: 0;\n`;\n\nexport const ErrorMessage = styled.div`\n  width: 500px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-size: 30px;\n  font-weight: 700;\n\n  color: #ffff;\n  background-color: rgb(245, 57, 57);\n\n  border-radius: 15px;\n\n  padding: 20px;\n`;\n\nexport const List = styled.ul`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n\n  font-size: 18px;\n\n  border-radius: 10px;\n  padding: 30px 20px;\n  margin: 0;\n\n  color: rgb(16, 16, 144);\n  background-image: linear-gradient(\n    to right,\n    rgb(223, 236, 253) 15%,\n    rgb(194, 223, 254) 40%,\n    rgb(176, 212, 249) 65%,\n    rgb(175, 212, 252)\n  );\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px 0px;\n`;\n","import styled from '@emotion/styled';\nimport { Form as FormikForm, Field } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n\n  width: 450px;\n\n  background-color: rgb(220, 253, 220);\n\n  padding: 30px 20px;\n  margin: 0 auto;\n  border: 3px solid rgb(18, 209, 18);\n  border-radius: 10px;\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n\n  font-family: inherit;\n  font-size: 18px;\n  color: rgb(40, 70, 219);\n\n  padding: 10px 15px;\n  border: 1px solid rgb(40, 70, 219);\n  border-radius: 5px;\n  outline: none;\n\n  &:focus {\n    outline: 2px solid rgb(40, 70, 219);\n  }\n`;\n\nexport const Label = styled.label`\n  width: 250px;\n\n  display: flex;\n  flex-direction: column;\n\n  &:first-of-type {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Text = styled.span`\n  font-size: 20px;\n  font-weight: 500;\n\n  color: rgb(40, 70, 219);\n  margin-bottom: 10px;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: 'Comic Sans MS';\n  font-size: 20px;\n  font-weight: 600;\n\n  padding: 10px 25px;\n  margin: 0 auto;\n  margin-top: 20px;\n\n  color: #ffff;\n  background-color: rgb(18, 209, 18);\n\n  border-radius: 10px;\n  border: none;\n\n  cursor: pointer;\n  transition: all 150ms ease-out;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    box-shadow: rgba(0, 0, 0, 0.16) 4px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport { Label, Text, AddButton, Thumb, Form, Input } from './ContactForm.styled';\nimport { FormError } from 'components/ContactsPage/FormError';\nimport { ErrorElem } from 'components/ContactsPage/FormError/FormError.styled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)/,\n      'Имя может содержать только буквы, апостроф, тире и пробелы.'\n    )\n    .required('Это поле обязательное'),\n  number: Yup.string()\n    .matches(\n      /[0-9]{3}-[0-9]{2}-[0-9]{2}/,\n      'Номер должен содержать только числа и тире. Формат: (123-45-67)'\n    )\n    // .min(9, 'Номер должен состоять из 9 символов')\n    // .max(9, 'Номер должен состоять из 9 символов')\n    .required('Это поле обязательное'),\n});\n\nexport function ContactForm({ addContact, isLoading }) {\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const [unvalidNum, setUnvalidNum] = useState(false);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (values.number.trim().length !== 9) {\n      setUnvalidNum(true);\n      return setTimeout(() => {\n        setUnvalidNum(false);\n      }, 3000);\n    }\n\n    const formValues = {\n      name: values.name.trim(),\n      number: values.number.trim(),\n    };\n    resetForm();\n    addContact(formValues);\n  };\n\n  const resetErrors = setErrors => {\n    setTimeout(() => setErrors({}), 3000);\n  };\n\n  return (\n    <Formik initialValues={initialValues} validationSchema={schema} onSubmit={handleSubmit}>\n      {({ errors, touched, setErrors }) => (\n        <Form autoComplete=\"off\">\n          <Label>\n            <Text>Name</Text>\n            <Thumb>\n              <Input type=\"text\" name=\"name\" placeholder=\"Name Surname\" />\n              {errors.name && touched.name ? <FormError name=\"name\" /> : null}\n              {errors.name && touched.name && resetErrors(setErrors)}\n            </Thumb>\n          </Label>\n\n          <Label>\n            <Text>Number {`(xxx-xx-xx)`}</Text>\n            <Thumb>\n              <Input type=\"tel\" name=\"number\" placeholder=\"123-45-67\" />\n              {errors.number && touched.number ? <FormError name=\"number\" /> : null}\n              {errors.number && touched.number && resetErrors(setErrors)}\n              {unvalidNum && <ErrorElem>Номер должен состоять из девяти символов</ErrorElem>}\n            </Thumb>\n          </Label>\n\n          <AddButton type=\"submit\" disabled={isLoading}>\n            Add contact\n          </AddButton>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nFormik.propTypes = {\n  initialValues: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport {\n  Form as ContactForm,\n  Input as Field,\n  Text as LabelText,\n} from '../ContactForm/ContactForm.styled';\n\nexport const Form = ContactForm.withComponent('form');\nexport const Input = Field.withComponent('input');\nexport const Text = LabelText.withComponent('span');\n\nexport const Label = styled.label`\n  width: 250px;\n\n  display: flex;\n  flex-direction: column;\n`;\n","import { Label, Input, Text, Form } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ handleFilter }) => {\n  return (\n    <Form>\n      <Label>\n        <Text>Find contacts by name</Text>\n        <Input type=\"text\" name=\"searchName\" onChange={handleFilter} />\n      </Label>\n    </Form>\n  );\n};\n\nInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 20px 20px;\n  margin-bottom: 20px;\n\n  border-radius: 10px;\n  background-color: #ffff;\n\n  transition: all 150ms ease-out;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    box-shadow: rgba(0, 0, 0, 0.45) 0px 25px 20px -20px;\n    background-image: linear-gradient(\n      to left,\n      rgb(232, 251, 233) 15%,\n      rgb(200, 253, 194) 40%,\n      rgb(168, 247, 170) 65%,\n      rgb(154, 244, 153)\n    );\n\n    cursor: pointer;\n  }\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const DeleteButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: 'Comic Sans MS', sans-serif;\n\n  padding: 10px 10px;\n\n  background-color: rgb(240, 196, 196);\n\n  border-radius: 10px;\n  border: none;\n\n  cursor: pointer;\n  transition: all 150ms ease-out;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(205, 3, 3);\n  }\n\n  & > svg {\n    pointer-events: none;\n    color: #ffff;\n  }\n`;\n","import { DeleteButton } from './Contact.styled';\nimport { CgClose } from 'react-icons/cg';\nimport PropTypes from 'prop-types';\nimport { ContactsSpinner } from '../ContactsSpinner';\n\nexport const Contact = ({\n  name,\n  number,\n  id,\n  props: { isDeleteContactLoading, deleteContact, deletedContactId, isLoading },\n}) => {\n  return (\n    <>\n      {name}: {number}\n      {isDeleteContactLoading && id === deletedContactId ? (\n        <ContactsSpinner size={'37'} />\n      ) : (\n        <DeleteButton\n          onClick={() => deleteContact(id, name)}\n          disabled={isLoading}\n          aria-label={`delete ${name} from contacts`}\n        >\n          <CgClose size={17} />\n        </DeleteButton>\n      )}\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Item } from './ContactList.styled';\nimport { Contact } from 'components/ContactsPage/Contact';\n\nexport const ContactList = ({ contacts, ...props }) => {\n  const reverseContacts = [...contacts].reverse();\n  return (\n    <>\n      {reverseContacts.map(({ name, id, number }) => (\n        <Item key={id}>\n          <Contact id={id} name={name} number={number} props={props} />\n        </Item>\n      ))}\n    </>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  props: PropTypes.object.isRequired,\n};\n","import { changeFilter } from 'redux/filter/filterSlice';\nimport {\n  useAddContactMutation,\n  useDeleteContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { toastOptions } from 'utils/toastOptions';\nimport { getFilteredContacts } from 'utils/getFilteredContacts';\n\nimport {\n  Phonebook,\n  Header,\n  Subtitle,\n  Wrapper,\n  List,\n  ErrorMessage,\n  Title,\n} from 'components/ContactsPage/Contacts.styled';\nimport { ContactForm } from 'components/ContactsPage/ContactForm';\nimport { Filter } from 'components/ContactsPage/Filter';\nimport { ContactList } from 'components/ContactsPage/ContactList';\nimport { ContactsSpinner } from 'components/ContactsPage/ContactsSpinner';\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nexport function Contacts() {\n  const [deletedContactId, setDeletedContactId] = useState(null);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const { data: contacts, isLoading } = useGetContactsQuery();\n  const [addContact, { isLoading: addContactLoading }] = useAddContactMutation();\n  const [deleteContact, { isLoading: deleteContactLoading }] = useDeleteContactMutation();\n\n  const addNewContact = async values => {\n    for (const contact of contacts) {\n      if (contact.name.toLowerCase() === values.name.toLowerCase()) {\n        return toast.error(`${contact.name} is already in contacts`, toastOptions);\n      }\n    }\n    const response = await addContact(values);\n    if (response.error)\n      return toast.error(\n        `Happen mistake while adding a contact, Please reload the page`,\n        toastOptions\n      );\n    return toast.success(`${values.name} added to contacts`, toastOptions);\n  };\n\n  const removeContact = async (id, contactName) => {\n    setDeletedContactId(id);\n    const response = await deleteContact(id);\n    if (response.error)\n      return toast.error(\n        `Happen mistake while deleting a contact, Please reload the page`,\n        toastOptions\n      );\n    toast.success(`${contactName} deleted from contacts`, toastOptions);\n    return setDeletedContactId(null);\n  };\n\n  const handleFilter = e => {\n    dispatch(changeFilter({ filter: e.target.value.toLowerCase().trim() }));\n  };\n\n  const filteredContacts = getFilteredContacts(contacts, filter);\n  const isLoadingContacts = isLoading || addContactLoading || deleteContactLoading;\n  const isShowingError = !isLoading && filteredContacts && filteredContacts.length === 0;\n\n  return (\n    <Wrapper>\n      <Phonebook>\n        <Header>Phonebook</Header>\n        <ContactForm addContact={addNewContact} isLoading={isLoadingContacts} />\n        <Subtitle>Find Contact</Subtitle>\n        <Filter handleFilter={handleFilter} />\n      </Phonebook>\n\n      {isShowingError && !addContactLoading && <ErrorMessage>No Contacts</ErrorMessage>}\n\n      {isShowingError && addContactLoading && (\n        <List>\n          <Title>Contacts</Title>\n          <ContactsSpinner size={'65'} />\n        </List>\n      )}\n\n      {!isShowingError && (\n        <List>\n          <Title>Contacts</Title>\n          {(addContactLoading || isLoading) && <ContactsSpinner size={isLoading ? '100' : '65'} />}\n\n          {contacts && (\n            <ContactList\n              contacts={filteredContacts}\n              deleteContact={removeContact}\n              deletedContactId={deletedContactId}\n              isDeleteContactLoading={deleteContactLoading}\n              isLoading={isLoadingContacts}\n            />\n          )}\n        </List>\n      )}\n    </Wrapper>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nFilter.propTypes = {\n  handleFilter: PropTypes.func.isRequired,\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n  deletedContactId: PropTypes.string,\n  isDeleteContactLoading: PropTypes.bool,\n  isLoading: PropTypes.bool,\n};\n","export const getFilteredContacts = (contacts, filter) => {\n  if (filter) {\n    const filterContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n    return filterContacts;\n  }\n  return contacts;\n};\n","import { Contacts } from 'components/ContactsPage/Contacts';\n\nfunction ContactsPage() {\n  return <Contacts />;\n}\n\nexport default ContactsPage;\n","export const toastOptions = {\n  position: 'top-right',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n"],"names":["ErrorElem","styled","FormError","name","render","msg","selectFilter","filter","Wrapper","Phonebook","Header","Title","withComponent","Subtitle","ErrorMessage","List","Form","FormikForm","Input","Field","Label","Text","AddButton","Thumb","schema","Yup","shape","matches","required","number","ContactForm","addContact","isLoading","useState","unvalidNum","setUnvalidNum","resetErrors","setErrors","setTimeout","initialValues","validationSchema","onSubmit","values","resetForm","trim","length","formValues","errors","touched","autoComplete","type","placeholder","disabled","Formik","PropTypes","LabelText","Filter","handleFilter","onChange","Item","DeleteButton","Contact","id","props","isDeleteContactLoading","deleteContact","deletedContactId","ContactsSpinner","size","onClick","propTypes","ContactList","contacts","reverseContacts","reverse","map","Contacts","setDeletedContactId","useSelector","dispatch","useDispatch","useGetContactsQuery","data","useAddContactMutation","addContactLoading","useDeleteContactMutation","deleteContactLoading","addNewContact","contact","toLowerCase","toast","toastOptions","error","removeContact","contactName","filteredContacts","includes","getFilteredContacts","isLoadingContacts","isShowingError","e","changeFilter","target","value","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}